{"version":3,"sources":["services/movieService.js","components/common/like.jsx","components/movies.jsx","App.js","serviceWorker.js","index.js"],"names":["movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","liked","Like","props","classes","react_default","a","createElement","className","onClick","style","cursor","aria-hidden","Movies","state","handleDelete","movie","_this","filter","m","setState","handleLike","Object","toConsumableArray","index","indexOf","objectSpread","_this2","this","count","length","Fragment","map","key","like","Component","App","components_movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17e221cc.chunk.js","sourcesContent":["import * as genresAPI from \"./genreService\";\r\n\r\nconst movies = [\r\n  {\r\n    _id: \"1\",\r\n    title: \"Terminator\",\r\n    genre: { _id: \"615\", name: \"Action\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n    publishDate: \"2018-01-03T19:04:28.809Z\",\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"2\",\r\n    title: \"Die Hard\",\r\n    genre: { _id: \"615\", name: \"Action\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"3\",\r\n    title: \"Get Out\",\r\n    genre: { _id: \"619\", name: \"Thriller\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5,\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"4\",\r\n    title: \"Trip to Italy\",\r\n    genre: { _id: \"617\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"5\",\r\n    title: \"Airplane\",\r\n    genre: { _id: \"617\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"6\",\r\n    title: \"Wedding Crashers\",\r\n    genre: { _id: \"617\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"7\",\r\n    title: \"Gone Girl\",\r\n    genre: { _id: \"619\", name: \"Thriller\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5,\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"8\",\r\n    title: \"The Sixth Sense\",\r\n    genre: { _id: \"619\", name: \"Thriller\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"9\",\r\n    title: \"The Avengers\",\r\n    genre: { _id: \"615\", name: \"Action\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: true\r\n  }\r\n];\r\n\r\nexport function getMovies() {\r\n  return movies;\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return movies.find(m => m._id === id);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\r\n  movieInDb.name = movie.name;\r\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\r\n  movieInDb.numberInStock = movie.numberInStock;\r\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\r\n\r\n  if (!movieInDb._id) {\r\n    movieInDb._id = Date.now();\r\n    movies.push(movieInDb);\r\n  }\r\n\r\n  return movieInDb;\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  let movieInDb = movies.find(m => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  return movieInDb;\r\n}\r\n","import React from 'react';\r\n\r\nconst Like = props => {    \r\n        let classes = \"fa fa-heart\";\r\n        if (!props.liked) classes +=\"-o\";\r\n\r\n        return ( \r\n            <i \r\n                className={classes} \r\n                onClick={props.onClick} \r\n                style={{cursor : \"pointer\"}}\r\n                aria-hidden=\"true\"/>\r\n        ); \r\n    }\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\nimport {getMovies} from '../services/movieService';\r\nimport Like from './common/like';\r\n\r\nclass Movies extends Component {\r\n    state = { movies:getMovies()  }\r\n\r\nhandleDelete = (movie) =>{\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({movies});\r\n};\r\n\r\nhandleLike= movie =>{\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = {...movies[index]};\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({movies});\r\n};\r\n\r\n    render() { \r\n\r\n        const{length : count} = this.state.movies;\r\n\r\n        if(count === 0)\r\n            return <p>There are no movies in the database.</p>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <p>Showing {count} movies in the database.</p>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Genre</th>\r\n                            <th>Stock</th>\r\n                            <th>Rate</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.movies.map(movie => (\r\n                            <tr key={movie._id}>\r\n                                <td>{movie.title}</td>\r\n                                <td>{movie.genre.name}</td>\r\n                                <td>{movie.numberInStock}</td>\r\n                                <td>{movie.dailyRentalRate}</td>\r\n                                <td>\r\n                                    <Like liked={movie.liked} onClick={() => this.handleLike(movie)}/>\r\n                                </td>\r\n                                <td>\r\n                                    <button onClick={() => this.handleDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n                                </td>\r\n                            </tr> \r\n                        ))}\r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>        \r\n        );\r\n    }\r\n}\r\n \r\nexport default Movies;","import React, { Component } from 'react';\r\nimport Movies from \"./components/movies\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        <Movies/>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}