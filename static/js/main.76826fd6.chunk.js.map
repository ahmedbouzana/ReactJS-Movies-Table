{"version":3,"sources":["services/genreService.js","services/movieService.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/movies.jsx","utils/paginate.js","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","ListGroup","props","items","textProperty","valueProperty","onItemSelect","selectedItem","react_default","a","createElement","className","map","item","key","style","cursor","onClick","defaultProps","Like","classes","aria-hidden","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","order","onSort","renderSortIcon","column","_this2","this","columns","label","Component","TableBody","renderCell","content","_","get","createKey","_this$props","data","Table","_ref","tableHeader","tableBody","MoviesTable","movie","Link","to","concat","like","onLike","onDelete","table","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","prototype","PropTypes","number","isRequired","func","Movies","state","handelGenreSelect","setState","selectedGenre","handleDelete","filter","m","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleSort","getPagedDate","_this$state","allMovies","filtred","pageNumber","startIndex","slice","take","value","paginate","orderBy","totalCount","length","g","count","_this$state2","_this$getPagedDate","listGroup","moviesTable","pagination","MovieForm","match","history","params","id","push","Customers","Rentals","NotFound","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","App","Fragment","navBar","Switch","Route","component","Redirect","from","exact","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76826fd6.chunk.js","sourcesContent":["export const genres = [\r\n    { _id: \"615\", name: \"Action\" },\r\n    { _id: \"617\", name: \"Comedy\" },\r\n    { _id: \"619\", name: \"Thriller\" }\r\n  ];\r\n  \r\n  export function getGenres() {\r\n    return genres.filter(g => g);\r\n  }\r\n  ","import * as genresAPI from \"./genreService\";\r\n\r\nconst movies = [\r\n  {\r\n    _id: \"1\",\r\n    title: \"Terminator\",\r\n    genre: { _id: \"615\", name: \"Action\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n    publishDate: \"2018-01-03T19:04:28.809Z\",\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"2\",\r\n    title: \"Die Hard\",\r\n    genre: { _id: \"615\", name: \"Action\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"3\",\r\n    title: \"Get Out\",\r\n    genre: { _id: \"619\", name: \"Thriller\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5,\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"4\",\r\n    title: \"Trip to Italy\",\r\n    genre: { _id: \"617\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"5\",\r\n    title: \"Airplane\",\r\n    genre: { _id: \"617\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"6\",\r\n    title: \"Wedding Crashers\",\r\n    genre: { _id: \"617\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"7\",\r\n    title: \"Gone Girl\",\r\n    genre: { _id: \"619\", name: \"Thriller\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5,\r\n    liked: true\r\n  },\r\n  {\r\n    _id: \"8\",\r\n    title: \"The Sixth Sense\",\r\n    genre: { _id: \"619\", name: \"Thriller\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5,\r\n    liked: false\r\n  },\r\n  {\r\n    _id: \"9\",\r\n    title: \"The Avengers\",\r\n    genre: { _id: \"615\", name: \"Action\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    liked: true\r\n  }\r\n];\r\n\r\nexport function getMovies() {\r\n  return movies;\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return movies.find(m => m._id === id);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\r\n  movieInDb.name = movie.name;\r\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\r\n  movieInDb.numberInStock = movie.numberInStock;\r\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\r\n\r\n  if (!movieInDb._id) {\r\n    movieInDb._id = Date.now();\r\n    movies.push(movieInDb);\r\n  }\r\n\r\n  return movieInDb;\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  let movieInDb = movies.find(m => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  return movieInDb;\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = props => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n  } = props;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          key={item[valueProperty]}\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\n\r\nconst Like = props => {    \r\n        let classes = \"fa fa-heart\";\r\n        if (!props.liked) classes +=\"-o\";\r\n\r\n        return ( \r\n            <i \r\n                className={classes} \r\n                onClick={props.onClick} \r\n                style={{cursor : \"pointer\"}}\r\n                aria-hidden=\"true\"/>\r\n        ); \r\n    }\r\n \r\nexport default Like;","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    { path: \"title\", label: \"Title\", content:movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: movie => (\r\n        <button\r\n          onClick={() => this.props.onDelete(movie)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  ];\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.prototype = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n\r\n  handelGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleDelete = movie => {\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedDate = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedGenre,\r\n      movies: allMovies,\r\n      sortColumn\r\n    } = this.state;\r\n\r\n    const filtred =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n        : allMovies;\r\n\r\n    const sorted = _.orderBy(filtred, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize, selectedGenre);\r\n\r\n    return { totalCount: filtred.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedDate();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            textProperty=\"name\"\r\n            valueProperty=\"_id\"\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handelGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <MoviesTable\r\n            movies={movies}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n            sortColumn={sortColumn}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nconst MovieForm = ({match, history}) => {\r\n    return (\r\n    <div>\r\n    <h1>Movie Form {match.params.id} </h1>\r\n    <button className=\"btn btn-primary\" onClick={()=>history.push(\"/movies\")}>return</button>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default MovieForm;","import React, { Component } from 'react';\r\n\r\nconst Customers = () => {\r\n    return <h1>Customers</h1>;\r\n}\r\n \r\nexport default Customers;","import React, { Component } from 'react';\r\n\r\nconst Rentals = () => {\r\n    return <h1>Rentals</h1>;\r\n}\r\n \r\nexport default Rentals;","import React, { Component } from 'react';\r\n\r\nconst NotFound = () => {\r\n    return <h1>NotFound</h1>;\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <Link className=\"navbar-brand\" to=\"/\">ReactJS</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/movies\">Movies</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </nav>);\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport {Route, Redirect, Switch} from \"react-router-dom\";\r\nimport Movies from \"./components/movies\";\r\nimport MovieForm from \"./components/movieForm\";\r\nimport Customers from \"./components/customers\";\r\nimport Rentals from \"./components/rentals\";\r\nimport NotFound from \"./components/notFound\";\r\nimport NavBar from './components/navBar';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar/>\r\n        <main className=\"container\">\r\n          <Switch>\r\n          <Route path=\"/movies/:id\" component={MovieForm}></Route>\r\n            <Route path=\"/movies\" component={Movies}></Route>\r\n            <Route path=\"/customers\" component={Customers}></Route>\r\n            <Route path=\"/rentals\" component={Rentals}></Route>\r\n            <Route path=\"/notFound\" component={NotFound}></Route>\r\n            <Redirect from=\"/\" exact to=\"/movies\" />\r\n            <Redirect to=\"/notFound\" />\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}